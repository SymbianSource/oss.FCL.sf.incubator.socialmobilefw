# ==============================================================================
# Generated by qmake (2.01a) (Qt 4.6.1) on: Mon May 17 12:46:26 2010
# This file is generated by qmake and should not be modified by the
# user.
#  Name        : Makefile
#  Description : Wrapper Makefile for calling Symbian build tools
#
# ==============================================================================


MAKEFILE          = Makefile
QMAKE             = d:\Qt\4.6.1\bin\qmake
DEL_FILE          = del
DEL_DIR           = rmdir
MOVE              = move
XCOPY             = xcopy /d /f /h /r /y /i
ABLD              = ABLD.BAT
DEBUG_PLATFORMS   = winscw gcce armv5 armv6
RELEASE_PLATFORMS = gcce armv5 armv6
MAKE              = make

ifeq (WINS,$(findstring WINS, $(PLATFORM)))
ZDIR=$(EPOCROOT)epoc32\release\$(PLATFORM)\$(CFG)\Z
else
ZDIR=$(EPOCROOT)epoc32\data\z
endif

DEFINES	 = -DSYMBIAN -DUNICODE -DQT_KEYPAD_NAVIGATION -DQT_SOFTKEYS_ENABLED -DQT_USE_MATH_H_FLOATS -DQT_GUI_LIB -DQT_CORE_LIB
INCPATH	 =  -I"D:/Qt/4.6.1/include/QtCore" -I"D:/Qt/4.6.1/include/QtCore/tmp" -I"D:/Qt/4.6.1/include/QtGui" -I"D:/Qt/4.6.1/include/QtGui/tmp" -I"D:/Qt/4.6.1/include" -I"D:/Qt/4.6.1/include/tmp" -I"D:/Qt/4.6.1/mkspecs/common/symbian" -I"D:/Qt/4.6.1/mkspecs/common/symbian/tmp" -I"D:/S60/devices/S60_5th_Edition_SDK_v0.9/epoc32/include" -I"D:/CarbideWorkspace/TestQJson/qjson/src" -I"D:/CarbideWorkspace/TestQJson/qjson/src/tmp" -I"D:/S60/devices/S60_5th_Edition_SDK_v0.9/epoc32/include/stdapis" -I"D:/S60/devices/S60_5th_Edition_SDK_v0.9/epoc32/include/stdapis/sys" -I"D:/S60/devices/S60_5th_Edition_SDK_v0.9/epoc32/include/stdapis/stlport" -I"D:/S60/devices/S60_5th_Edition_SDK_v0.9/epoc32/include/middleware" -I"D:/S60/devices/S60_5th_Edition_SDK_v0.9/epoc32/include/domain/middleware" -I"D:/S60/devices/S60_5th_Edition_SDK_v0.9/epoc32/include/domain/middleware/loc" -I"D:/CarbideWorkspace/TestQJson/qjson" -I"D:/CarbideWorkspace/TestQJson/qjson/tmp"
first: default
default: debug-winscw
all: debug release

qmake:
	$(QMAKE) -spec symbian-abld -o "bld.inf" "D:/CarbideWorkspace/TestQJson/qjson/qjson.pro"

bld.inf:
	$(QMAKE)

$(ABLD): bld.inf
	bldmake bldfiles

debug: $(ABLD)
	$(ABLD) build winscw udeb
	$(ABLD) build gcce udeb
	$(ABLD) build armv5 udeb
	$(ABLD) build armv6 udeb

release: $(ABLD)
	$(ABLD) build gcce urel
	$(ABLD) build armv5 urel
	$(ABLD) build armv6 urel

debug-winscw: $(ABLD)
	$(ABLD) build winscw udeb
debug-gcce: $(ABLD)
	$(ABLD) build gcce udeb
debug-armv5: $(ABLD)
	$(ABLD) build armv5 udeb
debug-armv6: $(ABLD)
	$(ABLD) build armv6 udeb
release-gcce: $(ABLD)
	$(ABLD) build gcce urel
release-armv5: $(ABLD)
	$(ABLD) build armv5 urel
release-armv6: $(ABLD)
	$(ABLD) build armv6 urel

export: $(ABLD)
	$(ABLD) export

cleanexport: $(ABLD)
	$(ABLD) cleanexport

src\$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) src\ $(MKDIR) src\ 
	cd src\ && $(QMAKE) src.pro -win32 -o $(MAKEFILE)
sub-src-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) src\ $(MKDIR) src\ 
	cd src\ && $(QMAKE) src.pro -win32 -o $(MAKEFILE)
sub-src: src\$(MAKEFILE) FORCE
	cd src\ && $(MAKE) -f $(MAKEFILE)
tests\$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) tests\ $(MKDIR) tests\ 
	cd tests\ && $(QMAKE) tests.pro -win32 -o $(MAKEFILE)
sub-tests-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) tests\ $(MKDIR) tests\ 
	cd tests\ && $(QMAKE) tests.pro -win32 -o $(MAKEFILE)
sub-tests: tests\$(MAKEFILE) sub-src FORCE
	cd tests\ && $(MAKE) -f $(MAKEFILE)


D:\Qt\4.6.1\bin\moc.exe:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all
FORCE:

winscw_deployment:

winscw_deployment_clean:

sis: restore_build
	$(if $(wildcard qjson_template.pkg),$(if $(wildcard .make.cache),$(MAKE) -s -f $(MAKEFILE) ok_sis,$(if $(QT_SIS_TARGET),$(MAKE) -s -f $(MAKEFILE) ok_sis,$(MAKE) -s -f $(MAKEFILE) fail_sis_nocache)),$(MAKE) -s -f $(MAKEFILE) fail_sis_nopkg)

ok_sis:
	createpackage.bat $(QT_SIS_OPTIONS) qjson_template.pkg $(QT_SIS_TARGET) $(QT_SIS_CERTIFICATE) $(QT_SIS_KEY) $(QT_SIS_PASSPHRASE)

fail_sis_nopkg:
	$(error PKG file does not exist, 'SIS' target is only supported for executables or projects with DEPLOYMENT statement)

fail_sis_nocache:
	$(error Project has to be built or QT_SIS_TARGET environment variable has to be set before calling 'SIS' target)

restore_build:
-include .make.cache

store_build:
	@echo # ============================================================================== > .make.cache
	@echo # This file is generated by make and should not be modified by the user >> .make.cache
	@echo #  Name        : .make.cache >> .make.cache
	@echo #  Part of     : qjson >> .make.cache
	@echo #  Description : This file is used to cache last build target for >> .make.cache
	@echo #                make sis target. >> .make.cache
	@echo #  Version     :  >> .make.cache
	@echo # >> .make.cache
	@echo # ============================================================================== >> .make.cache
	@echo. >> .make.cache
	@echo QT_SIS_TARGET ?= $(QT_SIS_TARGET) >> .make.cache

dodistclean:
	-$(MAKE) -f "d:\CarbideWorkspace\TestQJson\qjson\src\Makefile" dodistclean
	-$(MAKE) -f "d:\CarbideWorkspace\TestQJson\qjson\tests\Makefile" dodistclean
	-@ if EXIST "d:\CarbideWorkspace\TestQJson\qjson\Makefile" $(DEL_FILE)  "d:\CarbideWorkspace\TestQJson\qjson\Makefile"
	-@ if EXIST "d:\CarbideWorkspace\TestQJson\qjson\.make.cache" $(DEL_FILE)  "d:\CarbideWorkspace\TestQJson\qjson\.make.cache"
	-@ if EXIST "d:\CarbideWorkspace\TestQJson\qjson\bld.inf" $(DEL_FILE)  "d:\CarbideWorkspace\TestQJson\qjson\bld.inf"

distclean: clean dodistclean

clean: $(ABLD)
	-$(ABLD) reallyclean
	-bldmake clean

clean-debug: $(ABLD)
	$(ABLD) reallyclean winscw udeb
	$(ABLD) reallyclean gcce udeb
	$(ABLD) reallyclean armv5 udeb
	$(ABLD) reallyclean armv6 udeb

clean-release: $(ABLD)
	$(ABLD) reallyclean gcce urel
	$(ABLD) reallyclean armv5 urel
	$(ABLD) reallyclean armv6 urel

clean-debug-winscw: $(ABLD)
	$(ABLD) reallyclean winscw udeb
clean-debug-gcce: $(ABLD)
	$(ABLD) reallyclean gcce udeb
clean-debug-armv5: $(ABLD)
	$(ABLD) reallyclean armv5 udeb
clean-debug-armv6: $(ABLD)
	$(ABLD) reallyclean armv6 udeb
clean-release-gcce: $(ABLD)
	$(ABLD) reallyclean gcce urel
clean-release-armv5: $(ABLD)
	$(ABLD) reallyclean armv5 urel
clean-release-armv6: $(ABLD)
	$(ABLD) reallyclean armv6 urel

